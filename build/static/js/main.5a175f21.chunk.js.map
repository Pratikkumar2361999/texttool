{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","aboutText","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","rows","value","onChange","event","target","backgroundColor","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","newText","split","join","length","defaultProps","Alert","alert","role","word","lower","charAt","slice","captalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5a175f21.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} `}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" href=\"/\">\r\n                {props.aboutText}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"Please set Title\",\r\n  aboutText: \"About\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpclick = () => {\r\n    setText(text.toUpperCase());\r\n    props.showAlert(\"Converted to Uppercase\",\"success\")\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const handleLoclick = () => {\r\n    setText(text.toLowerCase());\r\n    props.showAlert(\"Converted to Lowercase\",\"success\")\r\n  };\r\n  const ClearText = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"Text Cleared \",\"success\")\r\n  };\r\n  const handleCopy = () => {\r\n    let text = document.getElementById(\"exampleFormControlTextarea1\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Text Copied  \",\"success\")\r\n\r\n  };\r\n  const handleExtraSpace = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"))\r\n    props.showAlert(\"Extra Spaces are Removed\",\"success\")\r\n\r\n  };\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div className=\"container mt-5\" style={{color:props.mode===\"dark\"?\"white\":\"#343a40\"}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control \"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"8\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style = {{backgroundColor:props.mode===\"light\"?\"white\":\"#343a40\" ,color:props.mode===\"dark\"?\"white\":\"#343a40\"}}\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary\" onClick={handleUpclick}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2 my-2\" onClick={handleLoclick}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary\" onClick={ClearText}>\r\n          Clear Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>\r\n          Copy Text\r\n        </button>\r\n        <button className=\"btn btn-primary\" onClick={handleExtraSpace}>\r\n          Remove Extraspaces\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-3\" style={{color:props.mode===\"dark\"?\"white\":\"#343a40\"}}>\r\n        <h2>Your Text Summary</h2>\r\n        <p>\r\n          {text.split(\" \").length} words and {text.length}\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} minutes are taken in read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter something into the textbox to preview it here\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n    const captalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{captalize(props.alert.type)}</strong>: {props.alert.msg}\r\n\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from 'react'\nimport Alert from \"./components/Alert\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\")\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n\n    })\n    setTimeout(() => {\n      setAlert(null);\n    },1500);\n  }\n\n  const toggleMode =() =>{\n    if (mode === 'light'){\n    setMode(\"dark\")\n    document.body.style.backgroundColor = \"#343a40\";\n    showAlert(\"Dark mode has been enabled\", \"success\")\n  }\n    else{\n      setMode(\"light\")\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\")\n\n    }\n    \n  }\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"Textyfire\" mode = {mode} toggleMode = {toggleMode} />\n      <Alert alert={alert}/>\n      <div className=\"container\">\n      {/* <Switch> */}\n          {/* <Route exact path=\"/about\">\n            <About /> */}\n          {/* </Route>\n          <Route exact path=\"/\"> */}\n          <TextForm showAlert={showAlert} heading=\"Enter the text to Analyze \" mode = {mode}/>\n          {/* </Route>\n        </Switch> */}\n      </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}